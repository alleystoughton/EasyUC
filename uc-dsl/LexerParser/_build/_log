### Starting build.
# Target: dlCheck.ml.depends, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), debug, explain, extension:ml, file:dlCheck.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,pcre,why3,inifiles,zarith,yojson -modules dlCheck.ml > dlCheck.ml.depends
# Target: dlParseFile.ml.depends, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), debug, explain, extension:ml, file:dlParseFile.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,pcre,why3,inifiles,zarith,yojson -modules dlParseFile.ml > dlParseFile.ml.depends
# Target: dl.ml.depends, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), debug, explain, extension:ml, file:dl.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,pcre,why3,inifiles,zarith,yojson -modules dl.ml > dl.ml.depends
# Target: dlEcInterface.ml.depends, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), debug, explain, extension:ml, file:dlEcInterface.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,pcre,why3,inifiles,zarith,yojson -modules dlEcInterface.ml > dlEcInterface.ml.depends
# Target: dlTypes.ml.depends, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), debug, explain, extension:ml, file:dlTypes.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,pcre,why3,inifiles,zarith,yojson -modules dlTypes.ml > dlTypes.ml.depends
# Target: ECsrc/ecCommands.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecCommands.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecCommands.mli > ECsrc/ecCommands.mli.depends
# Target: ECsrc/ecGState.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecGState.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecGState.mli > ECsrc/ecGState.mli.depends
# Target: ECsrc/ecLoader.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecLoader.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecLoader.mli > ECsrc/ecLoader.mli.depends
# Target: ECsrc/ecLocation.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecLocation.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecLocation.mli > ECsrc/ecLocation.mli.depends
# Target: ECsrc/ecUtils.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecUtils.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecUtils.mli > ECsrc/ecUtils.mli.depends
# Target: ECsrc/ecUtils.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecUtils.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecUtils.cmi ECsrc/ecUtils.mli
# Target: ECsrc/ecParsetree.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecParsetree.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecParsetree.ml > ECsrc/ecParsetree.ml.depends
# Target: ECsrc/ecBigInt.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecBigInt.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecBigInt.mli > ECsrc/ecBigInt.mli.depends
# Target: ECsrc/ecBigIntCore.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecBigIntCore.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecBigIntCore.ml > ECsrc/ecBigIntCore.ml.depends
# Target: ECsrc/ecBigIntCore.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecBigIntCore.cmo, file:ECsrc/ecBigIntCore.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecBigIntCore.cmo ECsrc/ecBigIntCore.ml
# Target: ECsrc/ecFol.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecFol.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecFol.mli > ECsrc/ecFol.mli.depends
# Target: ECsrc/ecBigInt.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecBigInt.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecBigInt.cmi ECsrc/ecBigInt.mli
# Target: ECsrc/ecCoreFol.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecCoreFol.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecCoreFol.mli > ECsrc/ecCoreFol.mli.depends
# Target: ECsrc/ecIdent.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecIdent.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecIdent.mli > ECsrc/ecIdent.mli.depends
# Target: ECsrc/ecMaps.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecMaps.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecMaps.ml > ECsrc/ecMaps.ml.depends
# Target: ECsrc/ecSymbols.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecSymbols.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecSymbols.mli > ECsrc/ecSymbols.mli.depends
# Target: ECsrc/ecMaps.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecMaps.cmo, file:ECsrc/ecMaps.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecMaps.cmo ECsrc/ecMaps.ml
+ ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecMaps.cmo ECsrc/ecMaps.ml
File "ECsrc/ecMaps.ml", line 131, characters 17-35:
131 |   let compare = (Pervasives.compare : t -> t -> int)
                       ^^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
File "ECsrc/ecMaps.ml", line 143, characters 17-35:
143 |   let compare = (Pervasives.compare : t -> t -> int)
                       ^^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
# Target: ECsrc/ecSymbols.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecSymbols.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecSymbols.cmi ECsrc/ecSymbols.mli
# Target: ECsrc/ecMemory.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecMemory.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecMemory.mli > ECsrc/ecMemory.mli.depends
# Target: ECsrc/ecIdent.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecIdent.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecIdent.cmi ECsrc/ecIdent.mli
# Target: ECsrc/ecPath.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecPath.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecPath.mli > ECsrc/ecPath.mli.depends
# Target: ECsrc/ecTypes.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecTypes.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecTypes.mli > ECsrc/ecTypes.mli.depends
# Target: ECsrc/ecPath.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecPath.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecPath.cmi ECsrc/ecPath.mli
# Target: ECsrc/ecUid.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecUid.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecUid.mli > ECsrc/ecUid.mli.depends
# Target: ECsrc/ecUid.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecUid.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecUid.cmi ECsrc/ecUid.mli
# Target: ECsrc/ecTypes.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecTypes.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecTypes.cmi ECsrc/ecTypes.mli
# Target: ECsrc/ecModules.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecModules.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecModules.mli > ECsrc/ecModules.mli.depends
# Target: ECsrc/ecMemory.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecMemory.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecMemory.cmi ECsrc/ecMemory.mli
# Target: ECsrc/ecModules.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecModules.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecModules.cmi ECsrc/ecModules.mli
# Target: ECsrc/ecEnv.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecEnv.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecEnv.mli > ECsrc/ecEnv.mli.depends
# Target: ECsrc/ecBaseLogic.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecBaseLogic.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecBaseLogic.ml > ECsrc/ecBaseLogic.ml.depends
# Target: ECsrc/ecCoreFol.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecCoreFol.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecCoreFol.cmi ECsrc/ecCoreFol.mli
# Target: ECsrc/ecDecl.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecDecl.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecDecl.mli > ECsrc/ecDecl.mli.depends
# Target: ECsrc/ecDecl.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecDecl.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecDecl.cmi ECsrc/ecDecl.mli
# Target: ECsrc/ecGState.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecGState.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecGState.cmi ECsrc/ecGState.mli
# Target: ECsrc/ecTheory.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecTheory.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecTheory.mli > ECsrc/ecTheory.mli.depends
# Target: ECsrc/ecTypeClass.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecTypeClass.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecTypeClass.mli > ECsrc/ecTypeClass.mli.depends
# Target: ECsrc/ecBaseLogic.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecBaseLogic.cmo, file:ECsrc/ecBaseLogic.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecBaseLogic.cmo ECsrc/ecBaseLogic.ml
# Target: ECsrc/ecTheory.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecTheory.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecTheory.cmi ECsrc/ecTheory.mli
# Target: ECsrc/ecTypeClass.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecTypeClass.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecTypeClass.cmi ECsrc/ecTypeClass.mli
# Target: ECsrc/ecEnv.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecEnv.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecEnv.cmi ECsrc/ecEnv.mli
# Target: ECsrc/ecLocation.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecLocation.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecLocation.cmi ECsrc/ecLocation.mli
# Target: ECsrc/ecFol.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecFol.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecFol.cmi ECsrc/ecFol.mli
# Target: ECsrc/ecScope.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecScope.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecScope.mli > ECsrc/ecScope.mli.depends
# Target: ECsrc/ecCoreGoal.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecCoreGoal.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecCoreGoal.mli > ECsrc/ecCoreGoal.mli.depends
# Target: ECsrc/ecMatching.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecMatching.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecMatching.mli > ECsrc/ecMatching.mli.depends
# Target: ECsrc/ecGenRegexp.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecGenRegexp.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecGenRegexp.ml > ECsrc/ecGenRegexp.ml.depends
# Target: ECsrc/ecParsetree.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecParsetree.cmo, file:ECsrc/ecParsetree.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecParsetree.cmo ECsrc/ecParsetree.ml
# Target: ECsrc/ecReduction.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecReduction.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecReduction.mli > ECsrc/ecReduction.mli.depends
# Target: ECsrc/ecUnify.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecUnify.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecUnify.mli > ECsrc/ecUnify.mli.depends
# Target: ECsrc/ecGenRegexp.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecGenRegexp.cmo, file:ECsrc/ecGenRegexp.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecGenRegexp.cmo ECsrc/ecGenRegexp.ml
# Target: ECsrc/ecReduction.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecReduction.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecReduction.cmi ECsrc/ecReduction.mli
# Target: ECsrc/ecUnify.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecUnify.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecUnify.cmi ECsrc/ecUnify.mli
# Target: ECsrc/ecMatching.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecMatching.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecMatching.cmi ECsrc/ecMatching.mli
# Target: ECsrc/ecLoader.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecLoader.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecLoader.cmi ECsrc/ecLoader.mli
# Target: ECsrc/ecProvers.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecProvers.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecProvers.mli > ECsrc/ecProvers.mli.depends
# Target: ECsrc/ecCoreGoal.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecCoreGoal.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecCoreGoal.cmi ECsrc/ecCoreGoal.mli
# Target: ECsrc/ecProvers.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecProvers.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecProvers.cmi ECsrc/ecProvers.mli
# Target: ECsrc/ecScope.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecScope.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecScope.cmi ECsrc/ecScope.mli
# Target: ECsrc/ecIo.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecIo.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecIo.mli > ECsrc/ecIo.mli.depends
# Target: ECsrc/ecParser.mly.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mly, file:ECsrc/ecParser.mly, infer, menhir_ocamldep, ocaml, ocamldep, quiet, traverse, use_menhir }
menhir --raw-depend --ocamldep 'ocamlfind ocamldep -modules' ECsrc/ecParser.mly > ECsrc/ecParser.mly.depends
# Target: ECsrc/ecCoreLib.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecCoreLib.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecCoreLib.mli > ECsrc/ecCoreLib.mli.depends
# Target: ECsrc/ecCoreLib.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecCoreLib.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecCoreLib.cmi ECsrc/ecCoreLib.mli
# Target: ECsrc/ecParser.mly, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:ml, extension:mly, file:ECsrc/ecParser.ml, file:ECsrc/ecParser.mly, infer, menhir, ocaml, parser, quiet, traverse, use_menhir }
menhir --ocamlc 'ocamlfind ocamlc -rectypes -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl' --explain --infer ECsrc/ecParser.mly
+ menhir --ocamlc 'ocamlfind ocamlc -rectypes -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl' --explain --infer ECsrc/ecParser.mly
File "ECsrc/ecParser.mly", line 3318, characters 24-57:
Warning 23: all the fields are explicitly listed in this record:
the 'with' clause is useless.
# Target: ECsrc/ecParser.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecParser.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecParser.mli > ECsrc/ecParser.mli.depends
# Target: ECsrc/ecParser.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecParser.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecParser.cmi ECsrc/ecParser.mli
# Target: ECsrc/ecOptions.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecOptions.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecOptions.mli > ECsrc/ecOptions.mli.depends
# Target: ECsrc/ecUserMessages.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecUserMessages.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecUserMessages.mli > ECsrc/ecUserMessages.mli.depends
# Target: ECsrc/ecHiInductive.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecHiInductive.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecHiInductive.mli > ECsrc/ecHiInductive.mli.depends
# Target: ECsrc/ecInductive.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecInductive.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecInductive.mli > ECsrc/ecInductive.mli.depends
# Target: ECsrc/ecTyping.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecTyping.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecTyping.mli > ECsrc/ecTyping.mli.depends
# Target: ECsrc/ecInductive.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecInductive.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecInductive.cmi ECsrc/ecInductive.mli
# Target: ECsrc/ecTyping.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecTyping.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecTyping.cmi ECsrc/ecTyping.mli
# Target: ECsrc/ecHiPredicates.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecHiPredicates.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecHiPredicates.mli > ECsrc/ecHiPredicates.mli.depends
# Target: ECsrc/ecPV.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecPV.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecPV.mli > ECsrc/ecPV.mli.depends
# Target: ECsrc/ecPrinting.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecPrinting.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecPrinting.mli > ECsrc/ecPrinting.mli.depends
# Target: ECsrc/ecProofTerm.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecProofTerm.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecProofTerm.mli > ECsrc/ecProofTerm.mli.depends
# Target: ECsrc/ecThCloning.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecThCloning.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecThCloning.mli > ECsrc/ecThCloning.mli.depends
# Target: ECsrc/ecRegexp.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecRegexp.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecRegexp.mli > ECsrc/ecRegexp.mli.depends
# Target: ECsrc/ecRegexp.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecRegexp.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecRegexp.cmi ECsrc/ecRegexp.mli
# Target: ECsrc/ecHiInductive.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecHiInductive.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecHiInductive.cmi ECsrc/ecHiInductive.mli
# Target: ECsrc/ecHiPredicates.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecHiPredicates.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecHiPredicates.cmi ECsrc/ecHiPredicates.mli
# Target: ECsrc/ecPV.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecPV.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecPV.cmi ECsrc/ecPV.mli
# Target: ECsrc/ecPrinting.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecPrinting.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecPrinting.cmi ECsrc/ecPrinting.mli
# Target: ECsrc/ecProofTerm.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecProofTerm.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecProofTerm.cmi ECsrc/ecProofTerm.mli
# Target: ECsrc/ecThCloning.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecThCloning.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecThCloning.cmi ECsrc/ecThCloning.mli
# Target: dlTypes.cmo, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:dlTypes.cmo, file:dlTypes.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,pcre,why3,inifiles,zarith,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o dlTypes.cmo dlTypes.ml
# Target: ECsrc/ecCommands.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecCommands.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecCommands.cmi ECsrc/ecCommands.mli
# Target: ECsrc/ecIo.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecIo.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecIo.cmi ECsrc/ecIo.mli
# Target: ECsrc/ecOptions.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecOptions.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecOptions.cmi ECsrc/ecOptions.mli
# Target: ECsrc/ecUserMessages.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecUserMessages.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecUserMessages.cmi ECsrc/ecUserMessages.mli
# Target: dlEcTypes.ml.depends, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), debug, explain, extension:ml, file:dlEcTypes.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,pcre,why3,inifiles,zarith,yojson -modules dlEcTypes.ml > dlEcTypes.ml.depends
# Target: dlEcInterface.cmo, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:dlEcInterface.cmo, file:dlEcInterface.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,pcre,why3,inifiles,zarith,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o dlEcInterface.cmo dlEcInterface.ml
# Target: dlParseTree.ml.depends, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), debug, explain, extension:ml, file:dlParseTree.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,pcre,why3,inifiles,zarith,yojson -modules dlParseTree.ml > dlParseTree.ml.depends
# Target: dlParseTree.cmo, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:dlParseTree.cmo, file:dlParseTree.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,pcre,why3,inifiles,zarith,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o dlParseTree.cmo dlParseTree.ml
# Target: dlExpressions.mli.depends, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), debug, explain, extension:mli, file:dlExpressions.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,pcre,why3,inifiles,zarith,yojson -modules dlExpressions.mli > dlExpressions.mli.depends
# Target: dlParsedTree.ml.depends, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), debug, explain, extension:ml, file:dlParsedTree.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,pcre,why3,inifiles,zarith,yojson -modules dlParsedTree.ml > dlParsedTree.ml.depends
# Target: dlParsedTree.cmo, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:dlParsedTree.cmo, file:dlParsedTree.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,pcre,why3,inifiles,zarith,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o dlParsedTree.cmo dlParsedTree.ml
+ ocamlfind ocamlc -rectypes -c -g -package batteries,pcre,why3,inifiles,zarith,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o dlParsedTree.cmo dlParsedTree.ml
File "dlParsedTree.ml", line 11, characters 15-33:
11 | 	let compare = Pervasives.compare
                    ^^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
# Target: dlParser.mly.depends, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), debug, explain, extension:mly, file:dlParser.mly, infer, menhir_ocamldep, ocaml, ocamldep, quiet, traverse, use_menhir }
menhir --raw-depend --ocamldep 'ocamlfind ocamldep -modules' dlParser.mly > dlParser.mly.depends
# Target: dlParser.mly, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), byte, compile, debug, explain, extension:ml, extension:mly, file:dlParser.ml, file:dlParser.mly, infer, menhir, ocaml, parser, quiet, traverse, use_menhir }
menhir --ocamlc 'ocamlfind ocamlc -rectypes -g -package batteries,pcre,why3,inifiles,zarith,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl' --explain --infer dlParser.mly
# Target: dlParser.mli.depends, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), debug, explain, extension:mli, file:dlParser.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,pcre,why3,inifiles,zarith,yojson -modules dlParser.mli > dlParser.mli.depends
# Target: dlUtils.ml.depends, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), debug, explain, extension:ml, file:dlUtils.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,pcre,why3,inifiles,zarith,yojson -modules dlUtils.ml > dlUtils.ml.depends
# Target: dlLexer.mll, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), debug, explain, extension:mll, file:dlLexer.mll, lexer, ocaml, ocamllex, quiet, traverse, use_menhir }
/Users/stough/.opam/default/bin/ocamllex.opt -q dlLexer.mll
# Target: dlLexer.ml.depends, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), debug, explain, extension:ml, file:dlLexer.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,pcre,why3,inifiles,zarith,yojson -modules dlLexer.ml > dlLexer.ml.depends
# Target: dlParser.cmi, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), byte, compile, debug, explain, extension:mli, file:dlParser.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,pcre,why3,inifiles,zarith,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o dlParser.cmi dlParser.mli
# Target: dlLexer.cmo, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:dlLexer.cmo, file:dlLexer.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,pcre,why3,inifiles,zarith,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o dlLexer.cmo dlLexer.ml
# Target: dlEcTypes.cmo, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:dlEcTypes.cmo, file:dlEcTypes.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,pcre,why3,inifiles,zarith,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o dlEcTypes.cmo dlEcTypes.ml
# Target: dlExpressions.cmi, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), byte, compile, debug, explain, extension:mli, file:dlExpressions.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,pcre,why3,inifiles,zarith,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o dlExpressions.cmi dlExpressions.mli
# Target: dlUtils.cmo, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:dlUtils.cmo, file:dlUtils.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,pcre,why3,inifiles,zarith,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o dlUtils.cmo dlUtils.ml
# Target: dl.cmo, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:dl.cmo, file:dl.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,pcre,why3,inifiles,zarith,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o dl.cmo dl.ml
# Target: dlParseFile.cmo, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:dlParseFile.cmo, file:dlParseFile.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,pcre,why3,inifiles,zarith,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o dlParseFile.cmo dlParseFile.ml
# Target: dlCheck.cmo, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:dlCheck.cmo, file:dlCheck.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,pcre,why3,inifiles,zarith,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o dlCheck.cmo dlCheck.ml
# Target: dlParser.ml.depends, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), debug, explain, extension:ml, file:dlParser.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,pcre,why3,inifiles,zarith,yojson -modules dlParser.ml > dlParser.ml.depends
# Target: ECsrc/ecLocation.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecLocation.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecLocation.ml > ECsrc/ecLocation.ml.depends
# Target: dlParser.cmo, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:dlParser.cmo, file:dlParser.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,pcre,why3,inifiles,zarith,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o dlParser.cmo dlParser.ml
# Target: ECsrc/ecLocation.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecLocation.cmo, file:ECsrc/ecLocation.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecLocation.cmo ECsrc/ecLocation.ml
# Target: dlExpressions.ml.depends, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), debug, explain, extension:ml, file:dlExpressions.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,pcre,why3,inifiles,zarith,yojson -modules dlExpressions.ml > dlExpressions.ml.depends
# Target: dlExpressions.cmo, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:dlExpressions.cmo, file:dlExpressions.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,pcre,why3,inifiles,zarith,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o dlExpressions.cmo dlExpressions.ml
# Target: ECsrc/ecCommands.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecCommands.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecCommands.ml > ECsrc/ecCommands.ml.depends
# Target: ECsrc/ecEco.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecEco.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecEco.ml > ECsrc/ecEco.ml.depends
# Target: ECsrc/ecVersion.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecVersion.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecVersion.mli > ECsrc/ecVersion.mli.depends
# Target: ECsrc/ecVersion.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecVersion.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecVersion.cmi ECsrc/ecVersion.mli
# Target: ECsrc/ecEco.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecEco.cmo, file:ECsrc/ecEco.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecEco.cmo ECsrc/ecEco.ml
# Target: ECsrc/ecDecl.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecDecl.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecDecl.ml > ECsrc/ecDecl.ml.depends
# Target: ECsrc/ecEnv.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecEnv.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecEnv.ml > ECsrc/ecEnv.ml.depends
# Target: ECsrc/ecPException.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecPException.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecPException.mli > ECsrc/ecPException.mli.depends
# Target: ECsrc/ecSubst.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecSubst.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecSubst.mli > ECsrc/ecSubst.mli.depends
# Target: ECsrc/ecPException.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecPException.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecPException.cmi ECsrc/ecPException.mli
# Target: ECsrc/ecSubst.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecSubst.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecSubst.cmi ECsrc/ecSubst.mli
# Target: ECsrc/ecGState.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecGState.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecGState.ml > ECsrc/ecGState.ml.depends
# Target: ECsrc/ecIdent.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecIdent.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecIdent.ml > ECsrc/ecIdent.ml.depends
# Target: ECsrc/ecIo.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecIo.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecIo.ml > ECsrc/ecIo.ml.depends
# Target: ECsrc/ecLexer.mll, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mll, file:ECsrc/ecLexer.mll, lexer, ocaml, ocamllex, quiet, traverse, use_menhir }
/Users/stough/.opam/default/bin/ocamllex.opt -q ECsrc/ecLexer.mll
# Target: ECsrc/ecLexer.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecLexer.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecLexer.ml > ECsrc/ecLexer.ml.depends
# Target: ECsrc/ecLexer.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecLexer.cmo, file:ECsrc/ecLexer.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecLexer.cmo ECsrc/ecLexer.ml
# Target: ECsrc/ecOptions.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecOptions.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecOptions.ml > ECsrc/ecOptions.ml.depends
# Target: ECsrc/system/XDG.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/system/XDG.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/system/XDG.mli > ECsrc/system/XDG.mli.depends
# Target: ECsrc/system/XDG.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/system/XDG.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/system -I ECsrc -I ECsrc/phl -o ECsrc/system/XDG.cmi ECsrc/system/XDG.mli
# Target: ECsrc/ecPath.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecPath.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecPath.ml > ECsrc/ecPath.ml.depends
# Target: ECsrc/ecScope.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecScope.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecScope.ml > ECsrc/ecScope.ml.depends
# Target: ECsrc/ecAlgTactic.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecAlgTactic.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecAlgTactic.mli > ECsrc/ecAlgTactic.mli.depends
# Target: ECsrc/ecAlgebra.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecAlgebra.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecAlgebra.mli > ECsrc/ecAlgebra.mli.depends
# Target: ECsrc/ecField.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecField.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecField.mli > ECsrc/ecField.mli.depends
# Target: ECsrc/ecRing.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecRing.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecRing.mli > ECsrc/ecRing.mli.depends
# Target: ECsrc/ecRing.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecRing.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecRing.cmi ECsrc/ecRing.mli
# Target: ECsrc/ecField.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecField.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecField.cmi ECsrc/ecField.mli
# Target: ECsrc/ecAlgebra.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecAlgebra.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecAlgebra.cmi ECsrc/ecAlgebra.mli
# Target: ECsrc/ecHiGoal.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecHiGoal.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecHiGoal.mli > ECsrc/ecHiGoal.mli.depends
# Target: ECsrc/ecLowGoal.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecLowGoal.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecLowGoal.mli > ECsrc/ecLowGoal.mli.depends
# Target: ECsrc/ecProofTyping.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecProofTyping.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecProofTyping.mli > ECsrc/ecProofTyping.mli.depends
# Target: ECsrc/ecProofTyping.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecProofTyping.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecProofTyping.cmi ECsrc/ecProofTyping.mli
# Target: ECsrc/ecLowGoal.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecLowGoal.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecLowGoal.cmi ECsrc/ecLowGoal.mli
# Target: ECsrc/ecHiNotations.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecHiNotations.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecHiNotations.mli > ECsrc/ecHiNotations.mli.depends
# Target: ECsrc/ecHiTacticals.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecHiTacticals.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecHiTacticals.mli > ECsrc/ecHiTacticals.mli.depends
# Target: ECsrc/ecHiGoal.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecHiGoal.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecHiGoal.cmi ECsrc/ecHiGoal.mli
# Target: ECsrc/ecSearch.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecSearch.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecSearch.mli > ECsrc/ecSearch.mli.depends
# Target: ECsrc/ecSection.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecSection.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecSection.mli > ECsrc/ecSection.mli.depends
# Target: ECsrc/ecSmt.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecSmt.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecSmt.mli > ECsrc/ecSmt.mli.depends
# Target: ECsrc/ecTheoryReplay.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecTheoryReplay.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecTheoryReplay.mli > ECsrc/ecTheoryReplay.mli.depends
# Target: ECsrc/ecAlgTactic.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecAlgTactic.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecAlgTactic.cmi ECsrc/ecAlgTactic.mli
# Target: ECsrc/ecHiNotations.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecHiNotations.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecHiNotations.cmi ECsrc/ecHiNotations.mli
# Target: ECsrc/ecHiTacticals.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecHiTacticals.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecHiTacticals.cmi ECsrc/ecHiTacticals.mli
# Target: ECsrc/ecSearch.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecSearch.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecSearch.cmi ECsrc/ecSearch.mli
# Target: ECsrc/ecSection.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecSection.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecSection.cmi ECsrc/ecSection.mli
# Target: ECsrc/ecSmt.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecSmt.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecSmt.cmi ECsrc/ecSmt.mli
# Target: ECsrc/ecTheoryReplay.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecTheoryReplay.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecTheoryReplay.cmi ECsrc/ecTheoryReplay.mli
# Target: ECsrc/ecTypes.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecTypes.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecTypes.ml > ECsrc/ecTypes.ml.depends
# Target: ECsrc/ecUserMessages.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecUserMessages.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecUserMessages.ml > ECsrc/ecUserMessages.ml.depends
# Target: ECsrc/ecUtils.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecUtils.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecUtils.ml > ECsrc/ecUtils.ml.depends
# Target: ECsrc/ecCommands.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecCommands.cmo, file:ECsrc/ecCommands.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecCommands.cmo ECsrc/ecCommands.ml
# Target: ECsrc/ecDecl.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecDecl.cmo, file:ECsrc/ecDecl.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecDecl.cmo ECsrc/ecDecl.ml
# Target: ECsrc/ecEnv.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecEnv.cmo, file:ECsrc/ecEnv.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecEnv.cmo ECsrc/ecEnv.ml
# Target: ECsrc/ecGState.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecGState.cmo, file:ECsrc/ecGState.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecGState.cmo ECsrc/ecGState.ml
# Target: ECsrc/ecIdent.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecIdent.cmo, file:ECsrc/ecIdent.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecIdent.cmo ECsrc/ecIdent.ml
# Target: ECsrc/ecIo.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecIo.cmo, file:ECsrc/ecIo.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecIo.cmo ECsrc/ecIo.ml
# Target: ECsrc/ecOptions.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecOptions.cmo, file:ECsrc/ecOptions.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecOptions.cmo ECsrc/ecOptions.ml
+ ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecOptions.cmo ECsrc/ecOptions.ml
File "ECsrc/ecOptions.ml", line 279, characters 37-50:
279 |     let aout = List.map String.trim (String.nsplit x ",") in
                                           ^^^^^^^^^^^^^
Alert deprecated: EcUtils.String.nsplit
Use split_on_string instead.
# Target: ECsrc/ecPath.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecPath.cmo, file:ECsrc/ecPath.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecPath.cmo ECsrc/ecPath.ml
# Target: ECsrc/ecScope.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecScope.cmo, file:ECsrc/ecScope.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecScope.cmo ECsrc/ecScope.ml
+ ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecScope.cmo ECsrc/ecScope.ml
File "ECsrc/ecScope.ml", line 2271, characters 21-52:
2271 |       | `Abstract -> { opts with clo_abstract = b; }
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning 23: all the fields are explicitly listed in this record:
the 'with' clause is useless.
# Target: ECsrc/ecTypes.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecTypes.cmo, file:ECsrc/ecTypes.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecTypes.cmo ECsrc/ecTypes.ml
+ ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecTypes.cmo ECsrc/ecTypes.ml
File "ECsrc/ecTypes.ml", line 240, characters 19-33:
240 |         else match Char.lowercase x.[i] with
                         ^^^^^^^^^^^^^^
Alert deprecated: Stdlib.Char.lowercase
Use Char.lowercase_ascii instead.
File "ECsrc/ecTypes.ml", line 377, characters 9-27:
377 |   | 0 -> Pervasives.compare v1.pv_kind v2.pv_kind
               ^^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
File "ECsrc/ecTypes.ml", line 382, characters 9-27:
382 |   | 0 -> Pervasives.compare v1.pv_kind v2.pv_kind
               ^^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
File "ECsrc/ecTypes.ml", line 386, characters 8-26:
386 |   match Pervasives.compare v1.pv_kind v2.pv_kind with
              ^^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
# Target: ECsrc/ecUserMessages.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecUserMessages.cmo, file:ECsrc/ecUserMessages.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecUserMessages.cmo ECsrc/ecUserMessages.ml
# Target: ECsrc/ecUtils.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecUtils.cmo, file:ECsrc/ecUtils.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecUtils.cmo ECsrc/ecUtils.ml
+ ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecUtils.cmo ECsrc/ecUtils.ml
File "ECsrc/ecUtils.ml", line 26, characters 2-16:
26 |   Pervasives.min max (Pervasives.max min i)
       ^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
File "ECsrc/ecUtils.ml", line 26, characters 22-36:
26 |   Pervasives.min max (Pervasives.max min i)
                           ^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
File "ECsrc/ecUtils.ml", line 84, characters 6-24:
84 |       Pervasives.compare (Obj.magic x1 : int) (Obj.magic x2 : int)
           ^^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
File "ECsrc/ecUtils.ml", line 89, characters 14-32:
89 |   | n1, n2 -> Pervasives.compare n1 n2
                   ^^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
File "ECsrc/ecUtils.ml", line 551, characters 18-36:
551 |   let min ?(cmp = Pervasives.compare) s =
                        ^^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
File "ECsrc/ecUtils.ml", line 554, characters 18-36:
554 |   let max ?(cmp = Pervasives.compare) s =
                        ^^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
File "ECsrc/ecUtils.ml", line 618, characters 20-26:
618 |   let split_lines = nsplit ~by:"\n"
                          ^^^^^^
Alert deprecated: nsplit
Use split_on_string instead.
File "ECsrc/ecUtils.ml", line 684, characters 18-40:
684 |       let input = Pervasives.open_in_bin source in
                        ^^^^^^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
File "ECsrc/ecUtils.ml", line 687, characters 10-28:
687 |           Pervasives.seek_in input offset;
                ^^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
File "ECsrc/ecUtils.ml", line 688, characters 10-40:
688 |           Pervasives.really_input_string input length)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
File "ECsrc/ecUtils.ml", line 689, characters 19-38:
689 |         (fun () -> Pervasives.close_in input)
                         ^^^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
File "ECsrc/ecUtils.ml", line 697, characters 19-42:
697 |       let output = Pervasives.open_out_bin output in
                         ^^^^^^^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
File "ECsrc/ecUtils.ml", line 700, characters 10-34:
700 |           Pervasives.output_string output data;
                ^^^^^^^^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
File "ECsrc/ecUtils.ml", line 701, characters 10-26:
701 |           Pervasives.flush output)
                ^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
File "ECsrc/ecUtils.ml", line 702, characters 19-39:
702 |         (fun () -> Pervasives.close_out output)
                         ^^^^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
# Target: ECsrc/ecCoreGoal.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecCoreGoal.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecCoreGoal.ml > ECsrc/ecCoreGoal.ml.depends
# Target: ECsrc/ecCoreLib.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecCoreLib.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecCoreLib.ml > ECsrc/ecCoreLib.ml.depends
# Target: ECsrc/ecLoader.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecLoader.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecLoader.ml > ECsrc/ecLoader.ml.depends
# Target: ECsrc/ecPrinting.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecPrinting.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecPrinting.ml > ECsrc/ecPrinting.ml.depends
# Target: ECsrc/ecTyping.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecTyping.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecTyping.ml > ECsrc/ecTyping.ml.depends
# Target: ECsrc/ecTransMatching.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecTransMatching.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecTransMatching.mli > ECsrc/ecTransMatching.mli.depends
# Target: ECsrc/ecTransMatching.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecTransMatching.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecTransMatching.cmi ECsrc/ecTransMatching.mli
# Target: ECsrc/ecCoreGoal.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecCoreGoal.cmo, file:ECsrc/ecCoreGoal.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecCoreGoal.cmo ECsrc/ecCoreGoal.ml
+ ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecCoreGoal.cmo ECsrc/ecCoreGoal.ml
File "ECsrc/ecCoreGoal.ml", lines 329-331, characters 12-35:
329 | ............{ tc with
330 |                 tce_tcenv = { tc.tce_tcenv with tce_goal = Some goal };
331 |                 tce_goals = tcx1; }
Warning 23: all the fields are explicitly listed in this record:
the 'with' clause is useless.
File "ECsrc/ecCoreGoal.ml", lines 412-414, characters 10-48:
412 | ..........{ tc with
413 |               tce_tcenv = { tc.tce_tcenv with tce_ctxt = tcx };
414 |               tce_goals = tc.tce_goals @ tcx1; }
Warning 23: all the fields are explicitly listed in this record:
the 'with' clause is useless.
File "ECsrc/ecCoreGoal.ml", line 700, characters 24-69:
700 |             let tc    = { tc with tce_goals = s; tce_tcenv = tcenv; } in
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning 23: all the fields are explicitly listed in this record:
the 'with' clause is useless.
File "ECsrc/ecCoreGoal.ml", line 721, characters 18-63:
721 |       let tc    = { tc with tce_goals = s; tce_tcenv = tcenv; } in
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning 23: all the fields are explicitly listed in this record:
the 'with' clause is useless.
# Target: ECsrc/ecCoreLib.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecCoreLib.cmo, file:ECsrc/ecCoreLib.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecCoreLib.cmo ECsrc/ecCoreLib.ml
# Target: ECsrc/ecLoader.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecLoader.cmo, file:ECsrc/ecLoader.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecLoader.cmo ECsrc/ecLoader.ml
+ ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecLoader.cmo ECsrc/ecLoader.ml
File "ECsrc/ecLoader.ml", line 98, characters 31-45:
98 |      | 0 when mode = `Lower -> Char.lowercase name.[0]
                                    ^^^^^^^^^^^^^^
Alert deprecated: Stdlib.Char.lowercase
Use Char.lowercase_ascii instead.
File "ECsrc/ecLoader.ml", line 99, characters 31-45:
99 |      | 0 when mode = `Upper -> Char.uppercase name.[0]
                                    ^^^^^^^^^^^^^^
Alert deprecated: Stdlib.Char.uppercase
Use Char.uppercase_ascii instead.
# Target: ECsrc/ecPrinting.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecPrinting.cmo, file:ECsrc/ecPrinting.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecPrinting.cmo ECsrc/ecPrinting.ml
# Target: ECsrc/ecTyping.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecTyping.cmo, file:ECsrc/ecTyping.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecTyping.cmo ECsrc/ecTyping.ml
# Target: ECsrc/ecCoreFol.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecCoreFol.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecCoreFol.ml > ECsrc/ecCoreFol.ml.depends
# Target: ECsrc/ecMemory.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecMemory.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecMemory.ml > ECsrc/ecMemory.ml.depends
# Target: ECsrc/ecModules.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecModules.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecModules.ml > ECsrc/ecModules.ml.depends
# Target: ECsrc/ecCoreFol.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecCoreFol.cmo, file:ECsrc/ecCoreFol.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecCoreFol.cmo ECsrc/ecCoreFol.ml
# Target: ECsrc/ecMemory.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecMemory.cmo, file:ECsrc/ecMemory.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecMemory.cmo ECsrc/ecMemory.ml
# Target: ECsrc/ecModules.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecModules.cmo, file:ECsrc/ecModules.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecModules.cmo ECsrc/ecModules.ml
# Target: ECsrc/ecBigInt.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecBigInt.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecBigInt.ml > ECsrc/ecBigInt.ml.depends
# Target: ECsrc/ecUid.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecUid.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecUid.ml > ECsrc/ecUid.ml.depends
# Target: ECsrc/ecBigInt.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecBigInt.cmo, file:ECsrc/ecBigInt.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecBigInt.cmo ECsrc/ecBigInt.ml
# Target: ECsrc/ecUid.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecUid.cmo, file:ECsrc/ecUid.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecUid.cmo ECsrc/ecUid.ml
# Target: ECsrc/ecSymbols.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecSymbols.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecSymbols.ml > ECsrc/ecSymbols.ml.depends
# Target: ECsrc/ecSymbols.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecSymbols.cmo, file:ECsrc/ecSymbols.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecSymbols.cmo ECsrc/ecSymbols.ml
+ ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecSymbols.cmo ECsrc/ecSymbols.ml
File "ECsrc/ecSymbols.ml", line 15, characters 45-63:
15 | let sym_compare : symbol -> symbol -> int  = Pervasives.compare
                                                  ^^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
File "ECsrc/ecSymbols.ml", line 20, characters 17-35:
20 |   let compare = (Pervasives.compare : t -> t -> int)
                      ^^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
# Target: ECsrc/ecTypeClass.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecTypeClass.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecTypeClass.ml > ECsrc/ecTypeClass.ml.depends
# Target: ECsrc/ecTypeClass.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecTypeClass.cmo, file:ECsrc/ecTypeClass.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecTypeClass.cmo ECsrc/ecTypeClass.ml
+ ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecTypeClass.cmo ECsrc/ecTypeClass.ml
File "ECsrc/ecTypeClass.ml", lines 65-67, characters 8-74:
65 | ........{ g with
66 |             tcg_nodes   = Mp.change (some -| up_node) src g.tcg_nodes;
67 |             tcg_closure = Mp.change (some -| up_clos) src g.tcg_closure; }
Warning 23: all the fields are explicitly listed in this record:
the 'with' clause is useless.
# Target: ECsrc/ecFol.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecFol.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecFol.ml > ECsrc/ecFol.ml.depends
# Target: ECsrc/ecMatching.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecMatching.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecMatching.ml > ECsrc/ecMatching.ml.depends
# Target: ECsrc/ecFol.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecFol.cmo, file:ECsrc/ecFol.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecFol.cmo ECsrc/ecFol.ml
# Target: ECsrc/ecMatching.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecMatching.cmo, file:ECsrc/ecMatching.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecMatching.cmo ECsrc/ecMatching.ml
# Target: ECsrc/ecInductive.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecInductive.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecInductive.ml > ECsrc/ecInductive.ml.depends
# Target: ECsrc/ecPException.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecPException.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecPException.ml > ECsrc/ecPException.ml.depends
# Target: ECsrc/ecSubst.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecSubst.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecSubst.ml > ECsrc/ecSubst.ml.depends
# Target: ECsrc/ecTheory.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecTheory.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecTheory.ml > ECsrc/ecTheory.ml.depends
# Target: ECsrc/ecInductive.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecInductive.cmo, file:ECsrc/ecInductive.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecInductive.cmo ECsrc/ecInductive.ml
# Target: ECsrc/ecPException.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecPException.cmo, file:ECsrc/ecPException.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecPException.cmo ECsrc/ecPException.ml
# Target: ECsrc/ecSubst.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecSubst.cmo, file:ECsrc/ecSubst.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecSubst.cmo ECsrc/ecSubst.ml
# Target: ECsrc/ecTheory.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecTheory.cmo, file:ECsrc/ecTheory.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecTheory.cmo ECsrc/ecTheory.ml
# Target: ECsrc/ecVersion.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecVersion.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecVersion.ml > ECsrc/ecVersion.ml.depends
# Target: ECsrc/ecVersion.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecVersion.cmo, file:ECsrc/ecVersion.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecVersion.cmo ECsrc/ecVersion.ml
# Target: ECsrc/ecReduction.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecReduction.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecReduction.ml > ECsrc/ecReduction.ml.depends
# Target: ECsrc/ecUnify.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecUnify.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecUnify.ml > ECsrc/ecUnify.ml.depends
# Target: ECsrc/ecUFind.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecUFind.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecUFind.mli > ECsrc/ecUFind.mli.depends
# Target: ECsrc/ecUFind.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecUFind.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecUFind.cmi ECsrc/ecUFind.mli
# Target: ECsrc/ecReduction.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecReduction.cmo, file:ECsrc/ecReduction.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecReduction.cmo ECsrc/ecReduction.ml
# Target: ECsrc/ecUnify.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecUnify.cmo, file:ECsrc/ecUnify.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecUnify.cmo ECsrc/ecUnify.ml
# Target: ECsrc/ecUFind.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecUFind.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecUFind.ml > ECsrc/ecUFind.ml.depends
# Target: ECsrc/ecUFind.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecUFind.cmo, file:ECsrc/ecUFind.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecUFind.cmo ECsrc/ecUFind.ml
# Target: ECsrc/ecTransMatching.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecTransMatching.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecTransMatching.ml > ECsrc/ecTransMatching.ml.depends
# Target: ECsrc/ecTransMatching.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecTransMatching.cmo, file:ECsrc/ecTransMatching.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecTransMatching.cmo ECsrc/ecTransMatching.ml
# Target: ECsrc/ecParser.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecParser.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecParser.ml > ECsrc/ecParser.ml.depends
# Target: ECsrc/ecRegexp.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecRegexp.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecRegexp.ml > ECsrc/ecRegexp.ml.depends
# Target: ECsrc/ecParser.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecParser.cmo, file:ECsrc/ecParser.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecParser.cmo ECsrc/ecParser.ml
+ ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecParser.cmo ECsrc/ecParser.ml
File "ECsrc/ecParser.mly", line 3318, characters 24-57:
Warning 23: all the fields are explicitly listed in this record:
the 'with' clause is useless.
# Target: ECsrc/ecRegexp.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecRegexp.cmo, file:ECsrc/ecRegexp.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecRegexp.cmo ECsrc/ecRegexp.ml
# Target: ECsrc/ecAlgTactic.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecAlgTactic.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecAlgTactic.ml > ECsrc/ecAlgTactic.ml.depends
# Target: ECsrc/ecHiGoal.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecHiGoal.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecHiGoal.ml > ECsrc/ecHiGoal.ml.depends
# Target: ECsrc/phl/ecPhlAuto.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlAuto.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlAuto.mli > ECsrc/phl/ecPhlAuto.mli.depends
# Target: ECsrc/phl/ecPhlConseq.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlConseq.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlConseq.mli > ECsrc/phl/ecPhlConseq.mli.depends
# Target: ECsrc/phl/ecPhlPrRw.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlPrRw.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlPrRw.mli > ECsrc/phl/ecPhlPrRw.mli.depends
# Target: ECsrc/phl/ecPhlAuto.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlAuto.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlAuto.cmi ECsrc/phl/ecPhlAuto.mli
# Target: ECsrc/phl/ecPhlConseq.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlConseq.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlConseq.cmi ECsrc/phl/ecPhlConseq.mli
# Target: ECsrc/phl/ecPhlPrRw.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlPrRw.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlPrRw.cmi ECsrc/phl/ecPhlPrRw.mli
# Target: ECsrc/ecHiInductive.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecHiInductive.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecHiInductive.ml > ECsrc/ecHiInductive.ml.depends
# Target: ECsrc/ecHiNotations.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecHiNotations.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecHiNotations.ml > ECsrc/ecHiNotations.ml.depends
# Target: ECsrc/ecHiPredicates.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecHiPredicates.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecHiPredicates.ml > ECsrc/ecHiPredicates.ml.depends
# Target: ECsrc/ecHiTacticals.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecHiTacticals.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecHiTacticals.ml > ECsrc/ecHiTacticals.ml.depends
# Target: ECsrc/ecFortune.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecFortune.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecFortune.mli > ECsrc/ecFortune.mli.depends
# Target: ECsrc/ecLowPhlGoal.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecLowPhlGoal.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecLowPhlGoal.ml > ECsrc/ecLowPhlGoal.ml.depends
# Target: ECsrc/phl/ecPhlApp.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlApp.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlApp.mli > ECsrc/phl/ecPhlApp.mli.depends
# Target: ECsrc/phl/ecPhlBdHoare.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlBdHoare.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlBdHoare.mli > ECsrc/phl/ecPhlBdHoare.mli.depends
# Target: ECsrc/phl/ecPhlCall.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlCall.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlCall.mli > ECsrc/phl/ecPhlCall.mli.depends
# Target: ECsrc/phl/ecPhlCase.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlCase.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlCase.mli > ECsrc/phl/ecPhlCase.mli.depends
# Target: ECsrc/phl/ecPhlCodeTx.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlCodeTx.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlCodeTx.mli > ECsrc/phl/ecPhlCodeTx.mli.depends
# Target: ECsrc/phl/ecPhlDeno.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlDeno.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlDeno.mli > ECsrc/phl/ecPhlDeno.mli.depends
# Target: ECsrc/phl/ecPhlEager.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlEager.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlEager.mli > ECsrc/phl/ecPhlEager.mli.depends
# Target: ECsrc/phl/ecPhlEqobs.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlEqobs.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlEqobs.mli > ECsrc/phl/ecPhlEqobs.mli.depends
# Target: ECsrc/phl/ecPhlExists.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlExists.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlExists.mli > ECsrc/phl/ecPhlExists.mli.depends
# Target: ECsrc/phl/ecPhlFel.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlFel.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlFel.mli > ECsrc/phl/ecPhlFel.mli.depends
# Target: ECsrc/phl/ecPhlFun.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlFun.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlFun.mli > ECsrc/phl/ecPhlFun.mli.depends
# Target: ECsrc/phl/ecPhlHiAuto.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlHiAuto.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlHiAuto.mli > ECsrc/phl/ecPhlHiAuto.mli.depends
# Target: ECsrc/phl/ecPhlHiBdHoare.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlHiBdHoare.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlHiBdHoare.mli > ECsrc/phl/ecPhlHiBdHoare.mli.depends
# Target: ECsrc/phl/ecPhlHiCond.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlHiCond.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlHiCond.mli > ECsrc/phl/ecPhlHiCond.mli.depends
# Target: ECsrc/phl/ecPhlInline.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlInline.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlInline.mli > ECsrc/phl/ecPhlInline.mli.depends
# Target: ECsrc/phl/ecPhlLoopTx.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlLoopTx.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlLoopTx.mli > ECsrc/phl/ecPhlLoopTx.mli.depends
# Target: ECsrc/phl/ecPhlPr.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlPr.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlPr.mli > ECsrc/phl/ecPhlPr.mli.depends
# Target: ECsrc/phl/ecPhlRCond.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlRCond.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlRCond.mli > ECsrc/phl/ecPhlRCond.mli.depends
# Target: ECsrc/phl/ecPhlRnd.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlRnd.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlRnd.mli > ECsrc/phl/ecPhlRnd.mli.depends
# Target: ECsrc/phl/ecPhlSkip.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlSkip.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlSkip.mli > ECsrc/phl/ecPhlSkip.mli.depends
# Target: ECsrc/phl/ecPhlSp.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlSp.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlSp.mli > ECsrc/phl/ecPhlSp.mli.depends
# Target: ECsrc/phl/ecPhlSwap.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlSwap.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlSwap.mli > ECsrc/phl/ecPhlSwap.mli.depends
# Target: ECsrc/phl/ecPhlSym.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlSym.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlSym.mli > ECsrc/phl/ecPhlSym.mli.depends
# Target: ECsrc/phl/ecPhlTrans.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlTrans.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlTrans.mli > ECsrc/phl/ecPhlTrans.mli.depends
# Target: ECsrc/phl/ecPhlWhile.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlWhile.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlWhile.mli > ECsrc/phl/ecPhlWhile.mli.depends
# Target: ECsrc/phl/ecPhlWp.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlWp.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlWp.mli > ECsrc/phl/ecPhlWp.mli.depends
# Target: ECsrc/ecStrongRing.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecStrongRing.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecStrongRing.ml > ECsrc/ecStrongRing.ml.depends
# Target: ECsrc/ecFortune.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecFortune.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecFortune.cmi ECsrc/ecFortune.mli
# Target: ECsrc/ecLowPhlGoal.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecLowPhlGoal.cmo, file:ECsrc/ecLowPhlGoal.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecLowPhlGoal.cmo ECsrc/ecLowPhlGoal.ml
# Target: ECsrc/phl/ecPhlApp.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlApp.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlApp.cmi ECsrc/phl/ecPhlApp.mli
# Target: ECsrc/phl/ecPhlBdHoare.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlBdHoare.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlBdHoare.cmi ECsrc/phl/ecPhlBdHoare.mli
# Target: ECsrc/phl/ecPhlCall.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlCall.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlCall.cmi ECsrc/phl/ecPhlCall.mli
# Target: ECsrc/phl/ecPhlCase.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlCase.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlCase.cmi ECsrc/phl/ecPhlCase.mli
# Target: ECsrc/phl/ecPhlCodeTx.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlCodeTx.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlCodeTx.cmi ECsrc/phl/ecPhlCodeTx.mli
# Target: ECsrc/phl/ecPhlDeno.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlDeno.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlDeno.cmi ECsrc/phl/ecPhlDeno.mli
# Target: ECsrc/phl/ecPhlEager.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlEager.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlEager.cmi ECsrc/phl/ecPhlEager.mli
# Target: ECsrc/phl/ecPhlEqobs.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlEqobs.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlEqobs.cmi ECsrc/phl/ecPhlEqobs.mli
# Target: ECsrc/phl/ecPhlExists.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlExists.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlExists.cmi ECsrc/phl/ecPhlExists.mli
# Target: ECsrc/phl/ecPhlFel.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlFel.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlFel.cmi ECsrc/phl/ecPhlFel.mli
# Target: ECsrc/phl/ecPhlFun.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlFun.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlFun.cmi ECsrc/phl/ecPhlFun.mli
# Target: ECsrc/phl/ecPhlHiAuto.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlHiAuto.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlHiAuto.cmi ECsrc/phl/ecPhlHiAuto.mli
# Target: ECsrc/phl/ecPhlHiBdHoare.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlHiBdHoare.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlHiBdHoare.cmi ECsrc/phl/ecPhlHiBdHoare.mli
# Target: ECsrc/phl/ecPhlHiCond.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlHiCond.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlHiCond.cmi ECsrc/phl/ecPhlHiCond.mli
# Target: ECsrc/phl/ecPhlInline.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlInline.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlInline.cmi ECsrc/phl/ecPhlInline.mli
# Target: ECsrc/phl/ecPhlLoopTx.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlLoopTx.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlLoopTx.cmi ECsrc/phl/ecPhlLoopTx.mli
# Target: ECsrc/phl/ecPhlPr.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlPr.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlPr.cmi ECsrc/phl/ecPhlPr.mli
# Target: ECsrc/phl/ecPhlRCond.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlRCond.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlRCond.cmi ECsrc/phl/ecPhlRCond.mli
# Target: ECsrc/phl/ecPhlRnd.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlRnd.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlRnd.cmi ECsrc/phl/ecPhlRnd.mli
# Target: ECsrc/phl/ecPhlSkip.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlSkip.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlSkip.cmi ECsrc/phl/ecPhlSkip.mli
# Target: ECsrc/phl/ecPhlSp.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlSp.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlSp.cmi ECsrc/phl/ecPhlSp.mli
# Target: ECsrc/phl/ecPhlSwap.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlSwap.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlSwap.cmi ECsrc/phl/ecPhlSwap.mli
# Target: ECsrc/phl/ecPhlSym.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlSym.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlSym.cmi ECsrc/phl/ecPhlSym.mli
# Target: ECsrc/phl/ecPhlTrans.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlTrans.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlTrans.cmi ECsrc/phl/ecPhlTrans.mli
# Target: ECsrc/phl/ecPhlWhile.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlWhile.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlWhile.cmi ECsrc/phl/ecPhlWhile.mli
# Target: ECsrc/phl/ecPhlWp.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlWp.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlWp.cmi ECsrc/phl/ecPhlWp.mli
# Target: ECsrc/ecStrongRing.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecStrongRing.cmo, file:ECsrc/ecStrongRing.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecStrongRing.cmo ECsrc/ecStrongRing.ml
# Target: ECsrc/ecProofTyping.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecProofTyping.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecProofTyping.ml > ECsrc/ecProofTyping.ml.depends
# Target: ECsrc/ecProvers.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecProvers.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecProvers.ml > ECsrc/ecProvers.ml.depends
# Target: ECsrc/ecSearch.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecSearch.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecSearch.ml > ECsrc/ecSearch.ml.depends
# Target: ECsrc/ecSection.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecSection.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecSection.ml > ECsrc/ecSection.ml.depends
# Target: ECsrc/ecSmt.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecSmt.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecSmt.ml > ECsrc/ecSmt.ml.depends
# Target: ECsrc/ecWhy3Conv.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecWhy3Conv.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecWhy3Conv.mli > ECsrc/ecWhy3Conv.mli.depends
# Target: ECsrc/ecWhy3Conv.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecWhy3Conv.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecWhy3Conv.cmi ECsrc/ecWhy3Conv.mli
# Target: ECsrc/ecThCloning.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecThCloning.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecThCloning.ml > ECsrc/ecThCloning.ml.depends
# Target: ECsrc/ecTheoryReplay.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecTheoryReplay.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecTheoryReplay.ml > ECsrc/ecTheoryReplay.ml.depends
# Target: ECsrc/ecAlgTactic.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecAlgTactic.cmo, file:ECsrc/ecAlgTactic.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecAlgTactic.cmo ECsrc/ecAlgTactic.ml
# Target: ECsrc/ecHiGoal.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecHiGoal.cmo, file:ECsrc/ecHiGoal.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecHiGoal.cmo ECsrc/ecHiGoal.ml
# Target: ECsrc/ecHiInductive.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecHiInductive.cmo, file:ECsrc/ecHiInductive.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecHiInductive.cmo ECsrc/ecHiInductive.ml
# Target: ECsrc/ecHiNotations.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecHiNotations.cmo, file:ECsrc/ecHiNotations.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecHiNotations.cmo ECsrc/ecHiNotations.ml
# Target: ECsrc/ecHiPredicates.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecHiPredicates.cmo, file:ECsrc/ecHiPredicates.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecHiPredicates.cmo ECsrc/ecHiPredicates.ml
# Target: ECsrc/ecHiTacticals.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecHiTacticals.cmo, file:ECsrc/ecHiTacticals.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecHiTacticals.cmo ECsrc/ecHiTacticals.ml
+ ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecHiTacticals.cmo ECsrc/ecHiTacticals.ml
File "ECsrc/ecHiTacticals.ml", line 31, characters 18-49:
31 |     | `Ambient -> { opts with cod_ambient  = b; }
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning 23: all the fields are explicitly listed in this record:
the 'with' clause is useless.
File "ECsrc/ecHiTacticals.ml", line 35, characters 18-48:
35 |     | `Ambient -> { opts with cod_ambient = b; }
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning 23: all the fields are explicitly listed in this record:
the 'with' clause is useless.
# Target: ECsrc/ecProofTyping.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecProofTyping.cmo, file:ECsrc/ecProofTyping.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecProofTyping.cmo ECsrc/ecProofTyping.ml
# Target: ECsrc/ecProvers.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecProvers.cmo, file:ECsrc/ecProvers.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecProvers.cmo ECsrc/ecProvers.ml
# Target: ECsrc/ecSearch.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecSearch.cmo, file:ECsrc/ecSearch.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecSearch.cmo ECsrc/ecSearch.ml
# Target: ECsrc/ecSection.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecSection.cmo, file:ECsrc/ecSection.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecSection.cmo ECsrc/ecSection.ml
# Target: ECsrc/ecSmt.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecSmt.cmo, file:ECsrc/ecSmt.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecSmt.cmo ECsrc/ecSmt.ml
# Target: ECsrc/ecThCloning.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecThCloning.cmo, file:ECsrc/ecThCloning.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecThCloning.cmo ECsrc/ecThCloning.ml
# Target: ECsrc/ecTheoryReplay.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecTheoryReplay.cmo, file:ECsrc/ecTheoryReplay.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecTheoryReplay.cmo ECsrc/ecTheoryReplay.ml
# Target: ECsrc/ecAlgebra.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecAlgebra.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecAlgebra.ml > ECsrc/ecAlgebra.ml.depends
# Target: ECsrc/ecAlgebra.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecAlgebra.cmo, file:ECsrc/ecAlgebra.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecAlgebra.cmo ECsrc/ecAlgebra.ml
# Target: ECsrc/ecField.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecField.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecField.ml > ECsrc/ecField.ml.depends
# Target: ECsrc/ecRing.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecRing.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecRing.ml > ECsrc/ecRing.ml.depends
# Target: ECsrc/ecField.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecField.cmo, file:ECsrc/ecField.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecField.cmo ECsrc/ecField.ml
# Target: ECsrc/ecRing.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecRing.cmo, file:ECsrc/ecRing.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecRing.cmo ECsrc/ecRing.ml
# Target: ECsrc/ecLowGoal.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecLowGoal.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecLowGoal.ml > ECsrc/ecLowGoal.ml.depends
# Target: ECsrc/ecCallbyValue.mli.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:mli, file:ECsrc/ecCallbyValue.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecCallbyValue.mli > ECsrc/ecCallbyValue.mli.depends
# Target: ECsrc/ecCallbyValue.cmi, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:mli, file:ECsrc/ecCallbyValue.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecCallbyValue.cmi ECsrc/ecCallbyValue.mli
# Target: ECsrc/phl/ecPhlAuto.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlAuto.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlAuto.ml > ECsrc/phl/ecPhlAuto.ml.depends
# Target: ECsrc/phl/ecPhlTAuto.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlTAuto.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlTAuto.mli > ECsrc/phl/ecPhlTAuto.mli.depends
# Target: ECsrc/phl/ecPhlTAuto.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlTAuto.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlTAuto.cmi ECsrc/phl/ecPhlTAuto.mli
# Target: ECsrc/phl/ecPhlConseq.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlConseq.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlConseq.ml > ECsrc/phl/ecPhlConseq.ml.depends
# Target: ECsrc/phl/ecPhlPrRw.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlPrRw.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlPrRw.ml > ECsrc/phl/ecPhlPrRw.ml.depends
# Target: ECsrc/ecProofTerm.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecProofTerm.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecProofTerm.ml > ECsrc/ecProofTerm.ml.depends
# Target: ECsrc/ecLowGoal.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecLowGoal.cmo, file:ECsrc/ecLowGoal.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecLowGoal.cmo ECsrc/ecLowGoal.ml
+ ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecLowGoal.cmo ECsrc/ecLowGoal.ml
File "ECsrc/ecLowGoal.ml", line 1639, characters 6-24:
1639 |       Pervasives.compare x y in
             ^^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
# Target: ECsrc/phl/ecPhlAuto.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlAuto.cmo, file:ECsrc/phl/ecPhlAuto.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlAuto.cmo ECsrc/phl/ecPhlAuto.ml
# Target: ECsrc/phl/ecPhlConseq.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlConseq.cmo, file:ECsrc/phl/ecPhlConseq.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlConseq.cmo ECsrc/phl/ecPhlConseq.ml
+ ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlConseq.cmo ECsrc/phl/ecPhlConseq.ml
File "ECsrc/phl/ecPhlConseq.ml", line 1057, characters 16-44:
1057 |     | `Frame -> { opts with cqo_frame = b; }
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning 23: all the fields are explicitly listed in this record:
the 'with' clause is useless.
# Target: ECsrc/phl/ecPhlPrRw.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlPrRw.cmo, file:ECsrc/phl/ecPhlPrRw.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlPrRw.cmo ECsrc/phl/ecPhlPrRw.ml
# Target: ECsrc/ecProofTerm.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecProofTerm.cmo, file:ECsrc/ecProofTerm.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecProofTerm.cmo ECsrc/ecProofTerm.ml
# Target: ECsrc/ecCallbyValue.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecCallbyValue.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecCallbyValue.ml > ECsrc/ecCallbyValue.ml.depends
# Target: ECsrc/ecPV.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecPV.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecPV.ml > ECsrc/ecPV.ml.depends
# Target: ECsrc/ecCallbyValue.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecCallbyValue.cmo, file:ECsrc/ecCallbyValue.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecCallbyValue.cmo ECsrc/ecCallbyValue.ml
# Target: ECsrc/ecPV.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecPV.cmo, file:ECsrc/ecPV.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecPV.cmo ECsrc/ecPV.ml
# Target: ECsrc/ecWhy3Conv.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecWhy3Conv.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecWhy3Conv.ml > ECsrc/ecWhy3Conv.ml.depends
# Target: ECsrc/ecWhy3Conv.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecWhy3Conv.cmo, file:ECsrc/ecWhy3Conv.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecWhy3Conv.cmo ECsrc/ecWhy3Conv.ml
+ ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecWhy3Conv.cmo ECsrc/ecWhy3Conv.ml
File "ECsrc/ecWhy3Conv.ml", line 53, characters 8-26:
53 |         Pervasives.compare i1 i2
             ^^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
File "ECsrc/ecWhy3Conv.ml", line 57, characters 13-31:
57 |       (lazy (Pervasives.compare i1.ic_negative i2.ic_negative))
                  ^^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
File "ECsrc/ecWhy3Conv.ml", line 66, characters 8-26:
66 |         Pervasives.compare r1 r2
             ^^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
File "ECsrc/ecWhy3Conv.ml", line 69, characters 8-26:
69 |         Pervasives.compare c1 c2
             ^^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
File "ECsrc/ecWhy3Conv.ml", line 179, characters 23-41:
179 |                 (lazy (Pervasives.compare q1 q2))
                             ^^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
File "ECsrc/ecWhy3Conv.ml", line 184, characters 21-39:
184 |               (lazy (Pervasives.compare o1 o2))
                           ^^^^^^^^^^^^^^^^^^
Alert deprecated: module Stdlib.Pervasives
Use Stdlib instead.

If you need to stay compatible with OCaml < 4.07, you can use the 
stdlib-shims library: https://github.com/ocaml/stdlib-shims
# Target: ECsrc/phl/ecPhlPr.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlPr.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlPr.ml > ECsrc/phl/ecPhlPr.ml.depends
# Target: ECsrc/phl/ecPhlCoreView.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlCoreView.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlCoreView.mli > ECsrc/phl/ecPhlCoreView.mli.depends
# Target: ECsrc/phl/ecPhlCoreView.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlCoreView.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlCoreView.cmi ECsrc/phl/ecPhlCoreView.mli
# Target: ECsrc/phl/ecPhlRnd.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlRnd.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlRnd.ml > ECsrc/phl/ecPhlRnd.ml.depends
# Target: ECsrc/phl/ecPhlSkip.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlSkip.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlSkip.ml > ECsrc/phl/ecPhlSkip.ml.depends
# Target: ECsrc/phl/ecPhlTAuto.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlTAuto.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlTAuto.ml > ECsrc/phl/ecPhlTAuto.ml.depends
# Target: ECsrc/phl/ecPhlWp.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlWp.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlWp.ml > ECsrc/phl/ecPhlWp.ml.depends
# Target: ECsrc/phl/ecPhlPr.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlPr.cmo, file:ECsrc/phl/ecPhlPr.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlPr.cmo ECsrc/phl/ecPhlPr.ml
# Target: ECsrc/phl/ecPhlRnd.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlRnd.cmo, file:ECsrc/phl/ecPhlRnd.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlRnd.cmo ECsrc/phl/ecPhlRnd.ml
# Target: ECsrc/phl/ecPhlSkip.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlSkip.cmo, file:ECsrc/phl/ecPhlSkip.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlSkip.cmo ECsrc/phl/ecPhlSkip.ml
# Target: ECsrc/phl/ecPhlTAuto.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlTAuto.cmo, file:ECsrc/phl/ecPhlTAuto.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlTAuto.cmo ECsrc/phl/ecPhlTAuto.ml
# Target: ECsrc/phl/ecPhlWp.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlWp.cmo, file:ECsrc/phl/ecPhlWp.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlWp.cmo ECsrc/phl/ecPhlWp.ml
# Target: ECsrc/phl/ecPhlCoreView.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlCoreView.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlCoreView.ml > ECsrc/phl/ecPhlCoreView.ml.depends
# Target: ECsrc/phl/ecPhlCoreView.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlCoreView.cmo, file:ECsrc/phl/ecPhlCoreView.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlCoreView.cmo ECsrc/phl/ecPhlCoreView.ml
# Target: ECsrc/ecFortune.ml.depends, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), debug, explain, extension:ml, file:ECsrc/ecFortune.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -modules ECsrc/ecFortune.ml > ECsrc/ecFortune.ml.depends
# Target: ECsrc/phl/ecPhlApp.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlApp.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlApp.ml > ECsrc/phl/ecPhlApp.ml.depends
# Target: ECsrc/phl/ecPhlBdHoare.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlBdHoare.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlBdHoare.ml > ECsrc/phl/ecPhlBdHoare.ml.depends
# Target: ECsrc/phl/ecPhlCall.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlCall.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlCall.ml > ECsrc/phl/ecPhlCall.ml.depends
# Target: ECsrc/phl/ecPhlCase.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlCase.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlCase.ml > ECsrc/phl/ecPhlCase.ml.depends
# Target: ECsrc/phl/ecPhlCodeTx.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlCodeTx.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlCodeTx.ml > ECsrc/phl/ecPhlCodeTx.ml.depends
# Target: ECsrc/phl/ecPhlDeno.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlDeno.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlDeno.ml > ECsrc/phl/ecPhlDeno.ml.depends
# Target: ECsrc/phl/ecPhlEager.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlEager.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlEager.ml > ECsrc/phl/ecPhlEager.ml.depends
# Target: ECsrc/phl/ecPhlEqobs.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlEqobs.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlEqobs.ml > ECsrc/phl/ecPhlEqobs.ml.depends
# Target: ECsrc/phl/ecPhlExists.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlExists.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlExists.ml > ECsrc/phl/ecPhlExists.ml.depends
# Target: ECsrc/phl/ecPhlFel.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlFel.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlFel.ml > ECsrc/phl/ecPhlFel.ml.depends
# Target: ECsrc/phl/ecPhlFun.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlFun.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlFun.ml > ECsrc/phl/ecPhlFun.ml.depends
# Target: ECsrc/phl/ecPhlHiAuto.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlHiAuto.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlHiAuto.ml > ECsrc/phl/ecPhlHiAuto.ml.depends
# Target: ECsrc/phl/ecPhlCond.mli.depends, tags: { debug, explain, extension:mli, file:ECsrc/phl/ecPhlCond.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlCond.mli > ECsrc/phl/ecPhlCond.mli.depends
# Target: ECsrc/phl/ecPhlCond.cmi, tags: { byte, compile, debug, explain, extension:mli, file:ECsrc/phl/ecPhlCond.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlCond.cmi ECsrc/phl/ecPhlCond.mli
# Target: ECsrc/phl/ecPhlHiBdHoare.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlHiBdHoare.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlHiBdHoare.ml > ECsrc/phl/ecPhlHiBdHoare.ml.depends
# Target: ECsrc/phl/ecPhlHiCond.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlHiCond.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlHiCond.ml > ECsrc/phl/ecPhlHiCond.ml.depends
# Target: ECsrc/phl/ecPhlInline.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlInline.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlInline.ml > ECsrc/phl/ecPhlInline.ml.depends
# Target: ECsrc/phl/ecPhlLoopTx.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlLoopTx.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlLoopTx.ml > ECsrc/phl/ecPhlLoopTx.ml.depends
# Target: ECsrc/phl/ecPhlRCond.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlRCond.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlRCond.ml > ECsrc/phl/ecPhlRCond.ml.depends
# Target: ECsrc/phl/ecPhlSp.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlSp.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlSp.ml > ECsrc/phl/ecPhlSp.ml.depends
# Target: ECsrc/phl/ecPhlSwap.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlSwap.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlSwap.ml > ECsrc/phl/ecPhlSwap.ml.depends
# Target: ECsrc/phl/ecPhlSym.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlSym.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlSym.ml > ECsrc/phl/ecPhlSym.ml.depends
# Target: ECsrc/phl/ecPhlTrans.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlTrans.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlTrans.ml > ECsrc/phl/ecPhlTrans.ml.depends
# Target: ECsrc/phl/ecPhlWhile.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlWhile.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlWhile.ml > ECsrc/phl/ecPhlWhile.ml.depends
# Target: ECsrc/ecFortune.cmo, tags: { package(batteries,menhirLib,why3,inifiles,zarith,pcre,yojson), byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/ecFortune.cmo, file:ECsrc/ecFortune.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -package batteries,menhirLib,why3,inifiles,zarith,pcre,yojson -I ECsrc -I ECsrc/system -I ECsrc/phl -o ECsrc/ecFortune.cmo ECsrc/ecFortune.ml
# Target: ECsrc/phl/ecPhlApp.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlApp.cmo, file:ECsrc/phl/ecPhlApp.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlApp.cmo ECsrc/phl/ecPhlApp.ml
# Target: ECsrc/phl/ecPhlBdHoare.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlBdHoare.cmo, file:ECsrc/phl/ecPhlBdHoare.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlBdHoare.cmo ECsrc/phl/ecPhlBdHoare.ml
# Target: ECsrc/phl/ecPhlCall.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlCall.cmo, file:ECsrc/phl/ecPhlCall.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlCall.cmo ECsrc/phl/ecPhlCall.ml
# Target: ECsrc/phl/ecPhlCase.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlCase.cmo, file:ECsrc/phl/ecPhlCase.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlCase.cmo ECsrc/phl/ecPhlCase.ml
# Target: ECsrc/phl/ecPhlCodeTx.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlCodeTx.cmo, file:ECsrc/phl/ecPhlCodeTx.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlCodeTx.cmo ECsrc/phl/ecPhlCodeTx.ml
# Target: ECsrc/phl/ecPhlDeno.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlDeno.cmo, file:ECsrc/phl/ecPhlDeno.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlDeno.cmo ECsrc/phl/ecPhlDeno.ml
# Target: ECsrc/phl/ecPhlEager.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlEager.cmo, file:ECsrc/phl/ecPhlEager.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlEager.cmo ECsrc/phl/ecPhlEager.ml
# Target: ECsrc/phl/ecPhlEqobs.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlEqobs.cmo, file:ECsrc/phl/ecPhlEqobs.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlEqobs.cmo ECsrc/phl/ecPhlEqobs.ml
# Target: ECsrc/phl/ecPhlExists.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlExists.cmo, file:ECsrc/phl/ecPhlExists.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlExists.cmo ECsrc/phl/ecPhlExists.ml
# Target: ECsrc/phl/ecPhlFel.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlFel.cmo, file:ECsrc/phl/ecPhlFel.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlFel.cmo ECsrc/phl/ecPhlFel.ml
# Target: ECsrc/phl/ecPhlFun.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlFun.cmo, file:ECsrc/phl/ecPhlFun.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlFun.cmo ECsrc/phl/ecPhlFun.ml
# Target: ECsrc/phl/ecPhlHiAuto.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlHiAuto.cmo, file:ECsrc/phl/ecPhlHiAuto.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlHiAuto.cmo ECsrc/phl/ecPhlHiAuto.ml
# Target: ECsrc/phl/ecPhlHiBdHoare.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlHiBdHoare.cmo, file:ECsrc/phl/ecPhlHiBdHoare.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlHiBdHoare.cmo ECsrc/phl/ecPhlHiBdHoare.ml
# Target: ECsrc/phl/ecPhlHiCond.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlHiCond.cmo, file:ECsrc/phl/ecPhlHiCond.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlHiCond.cmo ECsrc/phl/ecPhlHiCond.ml
# Target: ECsrc/phl/ecPhlInline.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlInline.cmo, file:ECsrc/phl/ecPhlInline.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlInline.cmo ECsrc/phl/ecPhlInline.ml
# Target: ECsrc/phl/ecPhlLoopTx.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlLoopTx.cmo, file:ECsrc/phl/ecPhlLoopTx.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlLoopTx.cmo ECsrc/phl/ecPhlLoopTx.ml
# Target: ECsrc/phl/ecPhlRCond.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlRCond.cmo, file:ECsrc/phl/ecPhlRCond.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlRCond.cmo ECsrc/phl/ecPhlRCond.ml
# Target: ECsrc/phl/ecPhlSp.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlSp.cmo, file:ECsrc/phl/ecPhlSp.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlSp.cmo ECsrc/phl/ecPhlSp.ml
# Target: ECsrc/phl/ecPhlSwap.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlSwap.cmo, file:ECsrc/phl/ecPhlSwap.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlSwap.cmo ECsrc/phl/ecPhlSwap.ml
# Target: ECsrc/phl/ecPhlSym.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlSym.cmo, file:ECsrc/phl/ecPhlSym.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlSym.cmo ECsrc/phl/ecPhlSym.ml
# Target: ECsrc/phl/ecPhlTrans.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlTrans.cmo, file:ECsrc/phl/ecPhlTrans.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlTrans.cmo ECsrc/phl/ecPhlTrans.ml
# Target: ECsrc/phl/ecPhlWhile.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlWhile.cmo, file:ECsrc/phl/ecPhlWhile.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlWhile.cmo ECsrc/phl/ecPhlWhile.ml
# Target: ECsrc/system/XDG.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/system/XDG.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/system/XDG.ml > ECsrc/system/XDG.ml.depends
# Target: ECsrc/system/XDG.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/system/XDG.cmo, file:ECsrc/system/XDG.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/system -I ECsrc -I ECsrc/phl -o ECsrc/system/XDG.cmo ECsrc/system/XDG.ml
# Target: ECsrc/phl/ecPhlCond.ml.depends, tags: { debug, explain, extension:ml, file:ECsrc/phl/ecPhlCond.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules ECsrc/phl/ecPhlCond.ml > ECsrc/phl/ecPhlCond.ml.depends
# Target: ECsrc/phl/ecPhlCond.cmo, tags: { byte, compile, debug, explain, extension:cmo, extension:ml, file:ECsrc/phl/ecPhlCond.cmo, file:ECsrc/phl/ecPhlCond.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -c -g -I ECsrc/phl -I ECsrc -I ECsrc/system -o ECsrc/phl/ecPhlCond.cmo ECsrc/phl/ecPhlCond.ml
# Target: dlCheck.byte, tags: { package(batteries,pcre,why3,inifiles,zarith,yojson), byte, debug, dont_link_with, explain, extension:byte, file:dlCheck.byte, link, ocaml, program, quiet, traverse, use_menhir }
ocamlfind ocamlc -rectypes -linkpkg -g -package batteries,pcre,why3,inifiles,zarith,yojson -I ECsrc -I ECsrc/phl -I ECsrc/system ECsrc/ecUtils.cmo ECsrc/ecLocation.cmo ECsrc/ecBigIntCore.cmo ECsrc/ecBigInt.cmo ECsrc/ecMaps.cmo ECsrc/ecSymbols.cmo ECsrc/ecUid.cmo ECsrc/ecIdent.cmo ECsrc/ecPath.cmo ECsrc/ecCoreLib.cmo ECsrc/ecTypes.cmo ECsrc/ecMemory.cmo ECsrc/ecModules.cmo ECsrc/ecCoreFol.cmo ECsrc/ecTypeClass.cmo ECsrc/ecDecl.cmo ECsrc/ecBaseLogic.cmo ECsrc/ecGState.cmo ECsrc/ecInductive.cmo ECsrc/ecVersion.cmo ECsrc/ecPException.cmo ECsrc/ecTheory.cmo ECsrc/ecSubst.cmo ECsrc/ecEnv.cmo ECsrc/ecFol.cmo ECsrc/ecGenRegexp.cmo ECsrc/ecParsetree.cmo ECsrc/ecUFind.cmo ECsrc/ecUnify.cmo ECsrc/ecReduction.cmo ECsrc/ecMatching.cmo ECsrc/ecParser.cmo ECsrc/ecRegexp.cmo ECsrc/ecLexer.cmo ECsrc/ecIo.cmo ECsrc/ecPrinting.cmo ECsrc/ecTransMatching.cmo ECsrc/ecTyping.cmo ECsrc/ecCoreGoal.cmo ECsrc/ecLoader.cmo ECsrc/ecEco.cmo ECsrc/ecRing.cmo ECsrc/ecField.cmo ECsrc/ecAlgebra.cmo ECsrc/ecAlgTactic.cmo ECsrc/ecCallbyValue.cmo ECsrc/ecPV.cmo ECsrc/ecProofTyping.cmo ECsrc/ecProofTerm.cmo ECsrc/ecProvers.cmo ECsrc/ecWhy3Conv.cmo ECsrc/ecSmt.cmo ECsrc/ecLowGoal.cmo ECsrc/ecLowPhlGoal.cmo ECsrc/phl/ecPhlTAuto.cmo ECsrc/phl/ecPhlConseq.cmo ECsrc/phl/ecPhlCoreView.cmo ECsrc/phl/ecPhlPr.cmo ECsrc/phl/ecPhlRnd.cmo ECsrc/phl/ecPhlSkip.cmo ECsrc/phl/ecPhlWp.cmo ECsrc/phl/ecPhlAuto.cmo ECsrc/phl/ecPhlPrRw.cmo ECsrc/ecHiGoal.cmo ECsrc/ecHiInductive.cmo ECsrc/ecHiNotations.cmo ECsrc/ecHiPredicates.cmo ECsrc/system/XDG.cmo ECsrc/ecFortune.cmo ECsrc/ecStrongRing.cmo ECsrc/phl/ecPhlApp.cmo ECsrc/phl/ecPhlBdHoare.cmo ECsrc/phl/ecPhlFun.cmo ECsrc/phl/ecPhlCall.cmo ECsrc/phl/ecPhlCase.cmo ECsrc/phl/ecPhlCodeTx.cmo ECsrc/phl/ecPhlDeno.cmo ECsrc/phl/ecPhlEager.cmo ECsrc/phl/ecPhlEqobs.cmo ECsrc/phl/ecPhlExists.cmo ECsrc/phl/ecPhlFel.cmo ECsrc/phl/ecPhlRCond.cmo ECsrc/phl/ecPhlCond.cmo ECsrc/phl/ecPhlHiAuto.cmo ECsrc/phl/ecPhlHiBdHoare.cmo ECsrc/phl/ecPhlHiCond.cmo ECsrc/phl/ecPhlInline.cmo ECsrc/phl/ecPhlLoopTx.cmo ECsrc/phl/ecPhlSp.cmo ECsrc/phl/ecPhlSwap.cmo ECsrc/phl/ecPhlSym.cmo ECsrc/phl/ecPhlTrans.cmo ECsrc/phl/ecPhlWhile.cmo ECsrc/ecHiTacticals.cmo ECsrc/ecSearch.cmo ECsrc/ecSection.cmo ECsrc/ecThCloning.cmo ECsrc/ecTheoryReplay.cmo ECsrc/ecScope.cmo ECsrc/ecUserMessages.cmo ECsrc/ecCommands.cmo ECsrc/ecOptions.cmo dlTypes.cmo dlEcInterface.cmo dlParseTree.cmo dlEcTypes.cmo dlParsedTree.cmo dlParser.cmo dlLexer.cmo dlUtils.cmo dlExpressions.cmo dl.cmo dlParseFile.cmo dlCheck.cmo -o dlCheck.byte
# Compilation successful.
